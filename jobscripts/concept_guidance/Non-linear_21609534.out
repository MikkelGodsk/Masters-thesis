Loaded module: cuda/12.1
Loaded module: cudnn/v8.9.1.23-prod-cuda-12.X
[NbConvertApp] Converting notebook Non_linear_detection_2.ipynb to notebook
0.01s - Debugger warning: It seems that frozen modules are being used, which may
0.00s - make the debugger miss breakpoints. Please pass -Xfrozen_modules=off
0.00s - to python to disable frozen modules.
0.00s - Note: Debugging will proceed. Set PYDEVD_DISABLE_FILE_VALIDATION=1 to disable this validation.
0.00s - Debugger warning: It seems that frozen modules are being used, which may
0.00s - make the debugger miss breakpoints. Please pass -Xfrozen_modules=off
0.00s - to python to disable frozen modules.
0.00s - Note: Debugging will proceed. Set PYDEVD_DISABLE_FILE_VALIDATION=1 to disable this validation.
Traceback (most recent call last):
  File "/zhome/18/7/137746/miniconda3/envs/msc/bin/jupyter-nbconvert", line 11, in <module>
    sys.exit(main())
             ^^^^^^
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/jupyter_core/application.py", line 280, in launch_instance
    super().launch_instance(argv=argv, **kwargs)
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/traitlets/config/application.py", line 992, in launch_instance
    app.start()
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbconvert/nbconvertapp.py", line 412, in start
    self.convert_notebooks()
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbconvert/nbconvertapp.py", line 590, in convert_notebooks
    self.convert_single_notebook(notebook_filename)
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbconvert/nbconvertapp.py", line 556, in convert_single_notebook
    output, resources = self.export_single_notebook(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbconvert/nbconvertapp.py", line 479, in export_single_notebook
    output, resources = self.exporter.from_filename(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbconvert/exporters/exporter.py", line 203, in from_filename
    return self.from_file(f, resources=resources, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbconvert/exporters/exporter.py", line 222, in from_file
    return self.from_notebook_node(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbconvert/exporters/notebook.py", line 36, in from_notebook_node
    nb_copy, resources = super().from_notebook_node(nb, resources, **kw)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbconvert/exporters/exporter.py", line 156, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbconvert/exporters/exporter.py", line 354, in _preprocess
    nbc, resc = preprocessor(nbc, resc)  # type:ignore[operator]
                ^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbconvert/preprocessors/base.py", line 48, in __call__
    return self.preprocess(nb, resources)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbconvert/preprocessors/execute.py", line 102, in preprocess
    self.preprocess_cell(cell, resources, index)
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbconvert/preprocessors/execute.py", line 123, in preprocess_cell
    cell = self.execute_cell(cell, index, store_history=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/zhome/18/7/137746/miniconda3/envs/msc/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
performance_matrix = cross_val_all_iti_adapters(iti_adapters, df_concat, verbose=True)
plot_performance_matrix(performance_matrix)
------------------

----- stdout -----
Using GroupedKFold
----- stdout -----
Evaluating on groups: [  0   7  11  13  18  26  33  34  39  44  50  57  63  64  69  74  77  80
  84  90  92  97 101 110 123 125 129 134 136 139 144 148 152 156 161 164
 171 173 175 181 183 186 190 195 207 215 220 224 226 229 233 239 247 248
 253 260 263 268 274 280 281 285 290 291 300 305 308 313 319 326 333 335
 340 345 353 355 361 363 368 374 380 383 387 388 393 398 406 412 417 422
 427 433 438 439 444 455 458 459 480 487]
----- stdout -----
Evaluating on groups: [  3  10  12  15  20  22  25  27  35  40  45  51  53  58  65  71  75  83
  88  98 102 105 111 113 119 124 126 140 143 153 157 162 165 174 177 187
 191 200 204 208 212 221 225 227 234 235 242 249 255 261 269 275 286 292
 302 306 309 314 321 327 328 332 334 336 341 346 357 362 364 369 370 371
 375 379 381 394 399 401 404 407 413 418 423 428 434 440 445 456 457 461
 467 472 473 474 476 481 483 488 492 496]
----- stdout -----
Evaluating on groups: [  2   5  16  21  23  24  28  36  41  47  52  54  59  62  66  76  85  86
  89  94 103 107 112 114 116 120 127 130 131 141 145 149 163 166 169 178
 184 185 188 192 197 201 205 209 213 217 219 230 236 243 245 254 256 262
 270 277 282 287 293 296 303 310 315 317 322 329 337 342 348 349 351 356
 358 365 376 382 390 395 400 408 414 419 420 424 429 432 441 446 450 451
 463 466 470 471 475 478 482 489 490 497]
----- stdout -----
Evaluating on groups: [  4   9  17  19  29  31  32  37  42  46  48  55  60  67  72  78  81  82
  95  99 100 104 108 117 121 128 132 133 137 142 146 147 150 154 159 167
 168 170 172 176 193 198 202 206 210 218 222 231 237 240 244 250 251 257
 258 264 266 272 278 283 288 294 297 298 304 311 316 320 323 330 338 343
 354 359 366 372 377 384 386 391 396 402 405 409 415 425 430 437 442 447
 448 449 454 460 462 469 484 493 498 499]
----- stdout -----
Evaluating on groups: [  1   6   8  14  30  38  43  49  56  61  68  70  73  79  87  91  93  96
 106 109 115 118 122 135 138 151 155 158 160 179 180 182 189 194 196 199
 203 211 214 216 223 228 232 238 241 246 252 259 265 267 271 273 276 279
 284 289 295 299 301 307 312 318 324 325 331 339 344 347 350 352 360 367
 373 378 385 389 392 397 403 410 411 416 421 426 431 435 436 443 452 453
 464 465 468 477 479 485 486 491 494 495]
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[7], line 2[0m
[1;32m      1[0m performance_matrix [38;5;241m=[39m cross_val_all_iti_adapters(iti_adapters, df_concat, verbose[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[0;32m----> 2[0m plot_performance_matrix(performance_matrix)

Cell [0;32mIn[5], line 121[0m, in [0;36mplot_performance_matrix[0;34m(performance_matrix)[0m
[1;32m    119[0m [38;5;28;01mdef[39;00m [38;5;21mplot_performance_matrix[39m(performance_matrix):
[1;32m    120[0m   n_layers, n_heads [38;5;241m=[39m performance_matrix[38;5;241m.[39mshape
[0;32m--> 121[0m   fig, ax [38;5;241m=[39m plt[38;5;241m.[39msubplots(figsize[38;5;241m=[39m([38;5;241m20[39m,[38;5;241m20[39m))
[1;32m    122[0m   im [38;5;241m=[39m ax[38;5;241m.[39mimshow(performance_matrix)
[1;32m    124[0m   [38;5;66;03m# Rotate the tick labels and set their alignment.[39;00m

[0;31mNameError[0m: name 'plt' is not defined


------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 21609534: <Non-linear> in cluster <dcc> Exited

Job <Non-linear> was submitted from host <n-62-30-1> by user <s184399> in cluster <dcc> at Thu Apr 25 11:37:53 2024
Job was executed on host(s) <4*n-62-11-13>, in queue <gpuv100>, as user <s184399> in cluster <dcc> at Thu Apr 25 12:14:05 2024
</zhome/18/7/137746> was used as the home directory.
</zhome/18/7/137746/msc/jobscripts/concept_guidance> was used as the working directory.
Started at Thu Apr 25 12:14:05 2024
Terminated at Thu Apr 25 12:53:01 2024
Results reported at Thu Apr 25 12:53:01 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -W 4:00

### GPU and CPU related parameters for a simple GPU job script
### select a GPU queue
#BSUB -q gpuv100
### request the number of GPUs
#BSUB -gpu "num=1:mode=exclusive_process"
### request the number of CPU cores (at least 4x the number of GPUs)
#BSUB -n 4
### we want to have this on a single node
#BSUB -R "span[hosts=1]"
### we need to request CPU memory, too (note: this is per CPU core)
#BSUB -R "rusage[mem=20GB]"

### -- set the job Name --
#BSUB -J Non-linear detection
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now

# please uncomment the following line and put in your e-mail address,
# if you want to receive e-mail notifications on a non-default address
#BSUB -u s184399@student.dtu.dk
### -- send notification at start --
#BSUB -B
### -- send notification at completion--
#BSUB -N

source $HOME/miniconda3/bin/activate

module load cuda/12.1
module load cudnn/v8.9.1.23-prod-cuda-12.X
conda activate msc
export OUTPUT_DIR_MSC=/work3/s184399/msc   # Then use os.getenv("OUTPUT_DIR") in the script
export CUDA_LAUNCH_BLOCKING=1
cd $HOME/msc/src

#export PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True

jupyter nbconvert --to notebook --execute --inplace Non_linear_detection_2.ipynb

# Apparently I can add parameters too using a tool called `papermill`. According to ChatGPT:
# pip install papermill
# Then make a cell where I assign parameters. Then I need to add a `parameters` cell tag 
# Then I can run the notebook with parameters like this:
# papermill [YOUR_NOTEBOOK].ipynb output_notebook.ipynb -p arg1 123 -p arg2 "Hello World"
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   2056.53 sec.
    Max Memory :                                 9868 MB
    Average Memory :                             6749.65 MB
    Total Requested Memory :                     81920.00 MB
    Delta Memory :                               72052.00 MB
    Max Swap :                                   -
    Max Processes :                              5
    Max Threads :                                31
    Run time :                                   2335 sec.
    Turnaround time :                            4508 sec.

The output (if any) is above this job summary.

